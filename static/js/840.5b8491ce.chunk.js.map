{"version":3,"file":"static/js/840.5b8491ce.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Header/Header.module.css?4e72","components/Header/Header.js","webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx","services/API.jsx","services/helpers.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Header\":\"Header_Header__Z9Z4k\",\"Conteiner\":\"Header_Conteiner__xQHII\",\"Navigation\":\"Header_Navigation__MNhDV\",\"Links\":\"Header_Links__9o8Hs\",\"DeActive\":\"Header_DeActive__cSG2U\",\"Items\":\"Header_Items__l77sU\",\"Title\":\"Header_Title__9Hkag\",\"Content\":\"Header_Content__3q873\",\"PrimaryTitle\":\"Header_PrimaryTitle__hdn6t\"};","import { NavLink } from 'react-router-dom';\nimport css from './Header.module.css';\nexport const Header = () => {\n  return (\n    <>\n      <header className={css.Header}>\n        <nav className={css.Navigation}>\n          <ul className={css.Container}>\n            <li className={css.Items}>\n              <NavLink\n                className={({ isActive }) =>\n                  isActive ? css.DeActive : css.Links\n                }\n                to=\"/\"\n                end\n              >\n                <h2 className={css.Title}>HOME</h2>\n              </NavLink>\n            </li>\n            <li className={css.Items}>\n              <NavLink\n                className={({ isActive }) =>\n                  isActive ? css.DeActive : css.Links\n                }\n                to=\"/movies\"\n              >\n                <h2 className={css.Title}>MOVIES</h2>\n              </NavLink>\n            </li>\n          </ul>\n          <div className={css.Content}>\n            <h1 className={css.PrimaryTitle}>THE BEST MOVIES SELECTION</h1>\n          </div>\n        </nav>\n      </header>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"SearchFormInput\":\"SearchForm_SearchFormInput__jntvc\",\"button\":\"SearchForm_button__UXY06\"};","import { useState } from 'react';\nimport css from './SearchForm.module.css';\nimport PropTypes from 'prop-types';\nexport const SearchForm = ({ getFormData }) => {\n  const [query, setQuery] = useState('');\n  //Замінити на searchParams?\n  const onSubmit = event => {\n    event.preventDefault();\n    getFormData(query);\n  };\n  const onHandleChage = event => {\n    setQuery(event.target.value.trim());\n  };\n  return (\n    <form onSubmit={onSubmit}>\n      <div>\n        <input\n          className={css.SearchFormInput}\n          name={'query'}\n          onChange={onHandleChage}\n          placeholder=\"Movie title\"\n          value={query}\n        />\n        <button className={css.button} type=\"submit\">\n          Search Movie\n        </button>\n      </div>\n    </form>\n  );\n};\nSearchForm.propTypes = {\n  getFormData: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"List\":\"Movies_List__n5DeS\",\"Items\":\"Movies_Items__4cJxh\",\"Link\":\"Movies_Link__4PD7w\",\"Image\":\"Movies_Image__VlCNt\",\"Title\":\"Movies_Title__RAuAK\",\"Overview\":\"Movies_Overview__AH3aF\",\"VoteAverage\":\"Movies_VoteAverage__Fx4Ox\",\"DateRealise\":\"Movies_DateRealise__Y4r0b\"};","import { getMovieByName } from 'services/API';\nimport { Header } from 'components/Header';\nimport { SearchForm } from 'components/SearchForm';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport css from './Movies.module.css';\nimport { createImgStr } from 'services/helpers';\n\nexport const Movies = () => {\n  //Замінити на searchParams query\n  const [searchParams, setSearchParams] = useSearchParams();\n  const page = searchParams.get('page') ?? 1;\n  const query = searchParams.get('query') ?? '';\n  const [movies, setMovies] = useState([]);\n  // eslint-disable-next-line no-unused-vars\n  // const [page, setPage] = useState(1);\n  // const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    const getData = async (query, page = 1) => {\n      const data = await getMovieByName(query, page);\n      setMovies(data.results);\n    };\n\n    if (page > 1 && query) {\n      getData(query, page);\n    } else if (query) {\n      getData(query);\n    }\n  }, [query, page]);\n  const getFormData = data => {\n    setSearchParams({ query: data });\n  };\n  // const loadMore = () => {\n  //   setPage(prevPage => prevPage + 1);\n  // };\n\n  return (\n    <>\n      <Header />\n      <SearchForm getFormData={getFormData} />\n      {movies && (\n        <ul className={css.List}>\n          {movies?.map(movie => (\n            <li className={css.Items} key={movie.id}>\n              <Link className={css.Link} to={`/movies/${movie.id}`}>\n                <div className={css.Image}>\n                  <img src={createImgStr(movie.poster_path)} alt=\"movie\" />\n                </div>\n                <h2 className={css.Title}>Title: {movie.original_title}</h2>\n                <p className={css.Overview}>Overview: {movie.overview}</p>\n                <p className={css.VoteAverage}>\n                  Vote average: {movie.vote_average}\n                </p>\n                <p className={css.DateRealise}>\n                  Realise date: {movie.release_date}\n                </p>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n","import axios from 'axios';\nconst API_KEY = '2996ac4c632c41fce1458614a9485a98';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrending = async () => {\n  const { data } = await axios.get('/trending/movie/day', {\n    params: { api_key: API_KEY },\n  });\n  return data;\n};\n\nexport const getMovieByName = async (query, page = 1) => {\n  const { data } = await axios.get('/search/movie', {\n    params: { api_key: API_KEY, query, page },\n  });\n  return data;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`/movie/${id}`, {\n    params: { api_key: API_KEY },\n  });\n  return data;\n};\nexport const getCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`, {\n    params: { api_key: API_KEY },\n  });\n  return data;\n};\nexport const getReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`, {\n    params: { api_key: API_KEY },\n  });\n  return data;\n};\n","export const createImgStr = path => {\n  if (path) {\n    return `https://image.tmdb.org/t/p/w500${path}`;\n  } else {\n    return `https://media.tenor.com/nEP6ovplEd8AAAAi/so-really.gif`;\n  }\n};\n"],"names":["Header","className","css","isActive","to","end","SearchForm","getFormData","useState","query","setQuery","onSubmit","event","preventDefault","name","onChange","target","value","trim","placeholder","type","Movies","useSearchParams","searchParams","setSearchParams","page","get","movies","setMovies","useEffect","getData","getMovieByName","data","results","map","movie","id","src","createImgStr","poster_path","alt","original_title","overview","vote_average","release_date","API_KEY","axios","getTrending","params","api_key","getMovieDetails","getCast","getReviews","path"],"sourceRoot":""}